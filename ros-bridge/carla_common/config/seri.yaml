# Configuration file for the AV SERI Project


simulation:
  use_sim_time: true
  host: 'localhost'
  port: 2000
  timeout: 10.0
  passive: true
  synchronous_mode: true
  fixed_delta_seconds: 0.05
  wait_for_vehicle_control_command: true
  town: 'Town01'
  register_all_sensors: true
  ego_vehicle_role_name: ["hero", "ego_vehicle", "hero0", "hero1", "hero2", "hero3", "hero4", "hero5", "hero6", "hero7", "hero8", "hero9"]

stop_sign:
  - id: 'stop_sign_1'
    location: {x: 102.70, y: -127.00, z: 38.10, roll: 0.0, pitch: 0.0, yaw: -90.0}

# parked_vehicle:
#   - name: 'parked_vehicle_1'
#     id: 'hero1'
#     type: 'vehicle.nissan.patrol_2021'
#     spawn_point: {x: 280.0, y: -129.81, z: 4.0, roll: 0.0, pitch: 0.0, yaw: 180.0}
#     box_radius: {x: 2.49658310, y: 0.97084373, z: 0.78984779}


weather: # Weather parameters: https://carla.readthedocs.io/en/latest/python_api/#carla.WeatherParameters
  # Values range from 0 to 100, being 0 a clear sky and 100 one completely covered with clouds. 
  cloudiness: 0.0
  # Rain intensity values range from 0 to 100, being 0 none at all and 100 a heavy rain. 
  precipitation: 0.0
  # Determines the creation of puddles. 
  # Values range from 0 to 100, being 0 none at all and 100 a road completely capped with water. 
  # Puddles are created with static noise, meaning that they will always appear at the same locations.
  precipitation_deposits: 0.0
  # Controls the strenght of the wind with values from 0, no wind at all, to 100, a strong wind. 
  # The wind does affect rain direction and leaves from trees, so this value is restricted to avoid animation issues. 
  wind_intensity: 0.0
  # Fog concentration or thickness. It only affects the RGB camera sensor. Values range from 0 to 100. 
  fog_density: 0.0
  # Fog start distance. Values range from 0 to infinite. 
  fog_distance: 0.0
  # Wetness intensity. It only affects the RGB camera sensor. Values range from 0 to 100. 
  wetness: 0.0
  # The azimuth angle of the sun. Values range from 0 to 360. Zero is an origin point in a sphere determined by Unreal Engine. 
  sun_azimuth_angle: 30.0
  # Altitude angle of the sun. Values range from -90 to 90 corresponding to midnight and midday each. 
  sun_altitude_angle: 45.0

objects:
  - type: 'sensor.pseudo.traffic_lights'
    id: 'traffic_lights'
  - type: 'sensor.pseudo.objects'
    id: 'objects'
  - type: 'sensor.pseudo.actor_list'
    id: 'actor_list'
  - type: 'sensor.pseudo.markers'
    id: 'markers'
  - type: 'sensor.pseudo.opendrive_map'
    id: 'map'
  # - type: 'vehicle.volkswagen.t2_2021'
  - type: 'vehicle.lincoln.mkz_2017' # Leader vehicle
    id: 'hero'
    spawn_point: {x: 300.0, y: -129.81, z: 1.0, roll: 0.0, pitch: 0.0, yaw: 180.0}
    sensors:
      - type: 'sensor.pseudo.tf'
        id: 'tf'
      - type: 'sensor.pseudo.objects'
        id: 'objects'
      - type: 'sensor.pseudo.odom'
        id: 'odometry'
      - type: 'sensor.pseudo.speedometer'
        id: 'speedometer'
      - type: 'actor.pseudo.control'
        id: 'control'
  - type: 'vehicle.tesla.model3' # Follower vehicle
    id: 'ego_vehicle'
    spawn_point: {x: 320.0, y: -129.81, z: 1.0, roll: 0.0, pitch: 0.0, yaw: 180.0}
    sensors:
      - type: 'sensor.camera.rgb'
        id: 'rgb_front'
        spawn_point: {x: 2.0, y: 0.0, z: 2.0, roll: 0.0, pitch: 0.0, yaw: 0.0}
        image_size_x: 800
        image_size_y: 600
        fov: 90.0
      - type: 'sensor.camera.rgb'
        id: 'rgb_view'
        spawn_point: {x: -4.5, y: 0.0, z: 2.8, roll: 0.0, pitch: 20.0, yaw: 0.0}
        image_size_x: 800
        image_size_y: 600
        fov: 90.0
        attached_objects:
          - type: 'actor.pseudo.control'
            id: 'control'
      - type: 'sensor.lidar.ray_cast'
        id: 'lidar'
        spawn_point: {x: 0.0, y: 0.0, z: 2.4, roll: 0.0, pitch: 0.0, yaw: 0.0}
        range: 50
        channels: 32
        points_per_second: 320000
        upper_fov: 2.0
        lower_fov: -26.8
        rotation_frequency: 20
        noise_stddev: 0.0
      - type: 'sensor.lidar.ray_cast_semantic'
        id: 'semantic_lidar'
        spawn_point: {x: 0.0, y: 0.0, z: 2.4, roll: 0.0, pitch: 0.0, yaw: 0.0}
        range: 50
        channels: 32
        points_per_second: 320000
        upper_fov: 2.0
        lower_fov: -26.8
        rotation_frequency: 20
      - type: 'sensor.other.radar'
        id: 'radar_front'
        spawn_point: {x: 2.0, y: 0.0, z: 2.0, roll: 0.0, pitch: 0.0, yaw: 0.0}  
        horizontal_fov: 30.0
        vertical_fov: 10.0
        points_per_second: 1500
        range: 100.0
      - type: 'sensor.camera.semantic_segmentation'
        id: 'semantic_segmentation_front'
        spawn_point: {x: 2.0, y: 0.0, z: 2.0, roll: 0.0, pitch: 0.0, yaw: 0.0}
        fov: 90.0
        image_size_x: 400
        image_size_y: 70
      - type: 'sensor.camera.depth'
        id: 'depth_front'
        spawn_point: {x: 2.0, y: 0.0, z: 2.0, roll: 0.0, pitch: 0.0, yaw: 0.0}
        fov: 90.0
        image_size_x: 400
        image_size_y: 70
      - type: 'sensor.camera.dvs'
        id: 'dvs_front'
        spawn_point: {x: 2.0, y: 0.0, z: 2.0, roll: 0.0, pitch: 0.0, yaw: 0.0}
        fov: 90.0
        image_size_x: 400
        image_size_y: 70
        positive_threshold: 0.3
        negative_threshold: 0.3
        sigma_positive_threshold: 0.0
        sigma_negative_threshold: 0.0
        use_log: true
        log_eps: 0.001
      - type: 'sensor.other.gnss'
        id: 'gnss'
        spawn_point: {x: 1.0, y: 0.0, z: 2.0, roll: 0.0, pitch: 0.0, yaw: 0.0}
        noise_alt_stddev: 0.01
        noise_lat_stddev: 0.01
        noise_lon_stddev: 0.01
        noise_alt_bias: 0.01
        noise_lat_bias: 0.01
        noise_lon_bias: 0.01
      - type: 'sensor.other.imu'
        id: 'imu'
        spawn_point: {x: 2.0, y: 0.0, z: 2.0, roll: 0.0, pitch: 0.0, yaw: 0.0}
        noise_accel_stddev_x: 0.0
        noise_accel_stddev_y: 0.0
        noise_accel_stddev_z: 0.0
        noise_gyro_stddev_x: 0.0
        noise_gyro_stddev_y: 0.0
        noise_gyro_stddev_z: 0.0
        noise_gyro_bias_x: 0.0
        noise_gyro_bias_y: 0.0
        noise_gyro_bias_z: 0.0
      - type: 'sensor.other.collision'
        id: 'collision'
        spawn_point: {x: 0.0, y: 0.0, z: 0.0, roll: 0.0, pitch: 0.0, yaw: 0.0}
      - type: 'sensor.other.lane_invasion'
        id: 'lane_invasion'
        spawn_point: {x: 0.0, y: 0.0, z: 0.0, roll: 0.0, pitch: 0.0, yaw: 0.0}
      - type: 'sensor.pseudo.tf'
        id: 'tf'
      - type: 'sensor.pseudo.objects'
        id: 'objects'
      - type: 'sensor.pseudo.odom'
        id: 'odometry'
      - type: 'sensor.pseudo.speedometer'
        id: 'speedometer'
      - type: 'actor.pseudo.control'
        id: 'control'
